{
	"info": {
		"_postman_id": "5045be6d-4b22-491f-96c8-497f8e67ccb6",
		"name": "User Authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Authentication",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"your_password\",\n\t\"username\": \"existing_username\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://my-aws-api.com/login",
					"protocol": "https",
					"host": [
						"my-aws-api",
						"com"
					],
					"path": [
						"login"
					]
				},
				"description": "This request is used to authenticate an existing user in the application.\n\n**What this request does:**\n\n1.  Accepts a JSON object in the request body with the fields `username` and `password`.\n2.  Verifies that both fields are present in the request.\n3.  Retrieves the user with the provided `username` from the database (DynamoDB).\n4.  If the user is found, it compares the provided `password` with the hashed password stored in the database using `bcrypt.compare()`.\n5.  If the passwords match, it generates a JWT (JSON Web Token) using the `jsonwebtoken` library and the `JWT_SECRET` environment variable.\n6.  Returns a successful response with a `200 OK` status code and a JSON body containing the `token`.\n7.  If the user is not found or the password does not match, it returns an authentication error.\n\n**Possible responses:**\n\n* **200 OK:** Successful authentication. The response body contains the JWT.\n    ```json\n    {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImV4aXN0aW5nX3VzZXJuYW1lIiwiaWF0IjoxNTE2MjM5MDIyfQ.example_jwt_signature\"\n    }\n    ```\n* **400 Bad Request:** Error in the request (e.g., empty request body, missing required fields, invalid JSON).\n    ```json\n    {\n        \"message\": \"Request body cannot be empty.\"\n    }\n    ```\n    ```json\n    {\n        \"message\": \"Username is required.\"\n    }\n    ```\n    ```json\n    {\n        \"message\": \"Password is required.\"\n    }\n    ```\n    ```json\n    {\n        \"message\": \"Invalid JSON in request body.\"\n    }\n    ```\n* **401 Unauthorized:** Invalid credentials (incorrect `username` or `password`).\n    ```json\n    {\n        \"message\": \"Invalid credentials.\"\n    }\n    ```\n* **500 Internal Server Error:** An unexpected error occurred on the server. This could be due to issues with DynamoDB, `bcrypt`, `jsonwebtoken`, or if the `JWT_SECRET` environment variable is not set.\n    ```json\n    {\n        \"message\": \"Internal server error\",\n        \"error\": \"[error details]\"\n    }\n    ```\n    ```json\n    {\n        \"message\": \"Internal server error: JWT secret not configured.\"\n    }\n    ```\n"
			},
			"response": []
		}
	]
}
